package com.vulnerabilityfixer.fixer;

import com.vulnerabilityfixer.bugs.BugInstance;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Stream;

public class Fixer
{
    static BugInstance bug;

    public static void fix(BugInstance bug)
    {
        Fixer.bug = bug;
        System.out.println("BUG NAME IS: " + bug.getSourceClassName());


        Path bugPath = Paths.get("../clonedrepositories/org.tolven.analysis/ejb/source"
                            + bug.getSourceFilePath());

        String line = "";
        int lineNumber = bug.getStartLine();
        try (Stream<String> lines = Files.lines(bugPath))
        {
            line = lines.skip(lineNumber).findFirst().get();
        }catch (IOException e)
        {
            System.out.println(e);
        }

        if(line.contains("createQuery"))
        {
            sanitize(getParameter(line));
        }


    }

    private static String getParameter(String line)
    {
        String parameter = line.split("\\(")[1];
        parameter = parameter.substring(0, parameter.length()-2);
        return parameter;
    }

    private static void sanitize(String input)
    {
        String packageName = bug.getPackageName();
        if(bug.getBugType() == "sqli")
        {
            try {
                writeToFile("SQLiFilter.java", "package" + packageName);
                writeToFile("../clonedrepositories/org.tolven.analysis/ejb/source"
                        + bug.getSourceFilePath(), "new SQLiFilter()");
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        else if(bug.getBugType() == "xss")
        {
            try {
                writeToFile("XssFilter.java", "package" + packageName);
                writeToFile("../clonedrepositories/org.tolven.analysis/ejb/source"
                        + bug.getSourceFilePath(), "new XssFilter()");
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    private static void writeToFile(String fileName, String line) throws IOException
    {
        FileWriter fileWriter = new FileWriter(fileName);
        PrintWriter printWriter = new PrintWriter(fileWriter);

        printWriter.print(line);
        printWriter.close();
    }
}
